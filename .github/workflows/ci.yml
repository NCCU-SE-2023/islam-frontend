name: CI

on:
  - push

jobs:
  installation:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        name: Setup NodeJs
        with:
          node-version: 18.x
      - uses: pnpm/action-setup@v2
        name: Setup pnpm
        with:
          version: 8.5.1
      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT
      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-
  lint:
    runs-on: ubuntu-latest
    needs: installation
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        name: Setup NodeJs
        with:
          node-version: 18.x
      - uses: pnpm/action-setup@v2
        name: Setup pnpm
        with:
          version: 8.5.1
      - name: Install dependencies
        shell: bash
        run: pnpm install --frozen-lockfile --prefer-offline
        env:
          HUSKY: '0'

      - name: Lint
        run: pnpm run lint
  test:
    runs-on: ubuntu-latest
    needs: installation
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        name: Setup NodeJs
        with:
          node-version: 18.x
      - uses: pnpm/action-setup@v2
        name: Setup pnpm
        with:
          version: 8.5.1
      - name: Install dependencies
        shell: bash
        run: pnpm install --frozen-lockfile --prefer-offline
        env:
          HUSKY: '0'

      - name: Test
        run: pnpm run coverage

      - name: "Report Coverage"
        if: always() # Also generate the report if tests are failing
        uses: davelosert/vitest-coverage-report-action@v1
